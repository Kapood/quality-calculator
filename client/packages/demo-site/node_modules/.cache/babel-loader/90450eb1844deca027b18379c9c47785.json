{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BugReporting } from \"./Reports/BugReporting\";\nimport { usePageFilters } from \"flowerbi-react\";\nimport { useFilterPane, FilterPane } from \"./FilterPane\";\nimport { Chart, ArcElement, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Legend, LineController } from \"chart.js\";\nimport { localFetch } from \"./localFetch\";\nimport { BugsGrid } from \"./Reports/BugsGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.registry.add(ArcElement, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Legend, LineController);\nChart.defaults.font.family = \"Segoe UI, 'Helvetica', 'Arial', sans-serif\";\n\nif (Chart.defaults.plugins.legend && Chart.defaults.plugins.legend.labels) {\n  Chart.defaults.plugins.legend.labels.usePointStyle = true;\n}\n\nChart.defaults.maintainAspectRatio = false;\nconst reports = {\n  \"Project Dashboard\": f => /*#__PURE__*/_jsxDEV(BugReporting, { ...f\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 46\n  }, this),\n  \"Quality Assessment\": f => /*#__PURE__*/_jsxDEV(BugsGrid, { ...f\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 47\n  }, this)\n};\nconst reportNames = Object.keys(reports);\nconst defaultReport = \"Project Dashboard\";\n\nfunction App() {\n  _s();\n\n  const [reportName, setReportName] = useState(defaultReport);\n  const pageFilters = usePageFilters();\n  const filterPane = useFilterPane(pageFilters);\n  const report = reports[reportName];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports-site\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: reportNames.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `item ${n === reportName && \"selected\"}`,\n        onClick: () => setReportName(n),\n        children: n\n      }, n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: filterPane.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-button\",\n          onClick: filterPane.toggle,\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-with-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-itself\",\n          onClick: pageFilters.clearInteraction,\n          children: report({\n            fetch: localFetch,\n            pageFilters\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterPane, {\n          filterPane: filterPane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"uG1RUVs3EzkCpWs6wrB+PabXO1M=\", false, function () {\n  return [usePageFilters, useFilterPane];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/App.tsx"],"names":["React","useState","BugReporting","usePageFilters","useFilterPane","FilterPane","Chart","ArcElement","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Legend","LineController","localFetch","BugsGrid","registry","add","defaults","font","family","plugins","legend","labels","usePointStyle","maintainAspectRatio","reports","f","reportNames","Object","keys","defaultReport","App","reportName","setReportName","pageFilters","filterPane","report","map","n","title","toggle","clearInteraction","fetch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BugReporting } from \"./Reports/BugReporting\";\nimport { VisualProps } from \"./Reports/VisualProps\";\nimport { usePageFilters } from \"flowerbi-react\";\nimport { useFilterPane, FilterPane } from \"./FilterPane\";\nimport {Chart, ArcElement, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Legend, LineController} from \"chart.js\";\nimport { localFetch } from \"./localFetch\";\nimport { BugsGrid } from \"./Reports/BugsGrid\";\n\nChart.registry.add(ArcElement, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Legend, LineController);\n\nChart.defaults.font.family = \"Segoe UI, 'Helvetica', 'Arial', sans-serif\";\nif (Chart.defaults.plugins.legend && Chart.defaults.plugins.legend.labels) {\n    Chart.defaults.plugins.legend.labels.usePointStyle = true;\n}\n\nChart.defaults.maintainAspectRatio = false;\n\nconst reports = {\n    \"Project Dashboard\": (f: VisualProps) => <BugReporting {...f} />,    \n    \"Quality Assessment\": (f: VisualProps) => <BugsGrid {...f} />,    \n}\n\ntype ReportName = keyof typeof reports;\n\nconst reportNames = Object.keys(reports) as ReportName[];\n\nconst defaultReport: ReportName = \"Project Dashboard\";\n\nfunction App() {\n    const [reportName, setReportName] = useState(defaultReport);\n    const pageFilters = usePageFilters();\n    const filterPane = useFilterPane(pageFilters);\n\n    const report = reports[reportName];\n\n    return (\n        <div className=\"reports-site\">\n            <div className=\"list\">\n                {\n                    reportNames.map(n => (\n                        <div key={n}\n                            className={`item ${n === reportName && \"selected\"}`}\n                            onClick={() => setReportName(n)}>{n}</div>\n                    ))\n                }\n            </div>\n            <div className=\"content\">\n                <div className=\"title-bar\">\n                    <div className=\"title\">{filterPane.title}</div>\n                    <div className=\"filters-button\" onClick={filterPane.toggle}>Filters</div>\n                </div>\n                <div className=\"report-with-filters\">\n                    <div className=\"report-itself\" onClick={pageFilters.clearInteraction}>\n                        {report({ fetch: localFetch, pageFilters })}\n                    </div>\n                    <FilterPane filterPane={filterPane} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}