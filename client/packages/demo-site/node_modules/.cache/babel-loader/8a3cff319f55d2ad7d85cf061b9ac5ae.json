{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/FilterPane.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DateReported } from \"./demoSchema\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction lastYear() {\n  const d = new Date();\n  d.setFullYear(d.getFullYear() - 5);\n  return d;\n}\n\nfunction toDateString(d) {\n  return d.toISOString().substr(0, 10);\n}\n\nfunction useDateInput(init) {\n  _s();\n\n  const [editing, setEditing] = useState(toDateString(init));\n  const [applied, setApplied] = useState(toDateString(init));\n\n  function apply() {\n    setApplied(editing);\n  }\n\n  function onChange(event) {\n    setEditing(event.target.value);\n  }\n\n  return {\n    editing,\n    applied,\n    dirty: editing !== applied,\n    onChange,\n    apply\n  };\n}\n\n_s(useDateInput, \"iPvbEh43dkegYHDc2NvfqbDoR3U=\");\n\nlet initCounter = 0;\nexport function useFilterPane(pageFilters) {\n  _s2();\n\n  const [visible, setVisible] = useState(false);\n  const from = useDateInput(lastYear());\n  const to = useDateInput(new Date());\n  const dates = [from, to];\n\n  function toggle() {\n    setVisible(!visible);\n  }\n\n  function apply() {\n    dates.forEach(d => d.apply());\n    pageFilters.setGlobal([DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)), DateReported.Id.lessThanOrEqualTo(new Date(to.editing))]);\n  }\n\n  const [init] = useState(++initCounter);\n\n  if (init === initCounter) {\n    apply();\n  }\n\n  const title = `Entered date from ${from.applied} to ${to.applied}`;\n  const dirty = dates.some(d => d.dirty);\n  return {\n    visible,\n    toggle,\n    from,\n    to,\n    dirty,\n    title,\n    apply\n  };\n}\n\n_s2(useFilterPane, \"qVxa/F7mbCJwVZrJlJ2UpvEW7YU=\", false, function () {\n  return [useDateInput, useDateInput];\n});\n\nexport function FilterPane(_ref) {\n  let {\n    filterPane: {\n      visible,\n      from,\n      to,\n      apply,\n      dirty\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `filter-pane ${visible && \"visible\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: from.editing,\n      onChange: from.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"To\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: to.editing,\n      onChange: to.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `button ${dirty && \"enabled\"}`,\n      onClick: apply,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_c = FilterPane;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPane\");","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/FilterPane.tsx"],"names":["React","useState","DateReported","lastYear","d","Date","setFullYear","getFullYear","toDateString","toISOString","substr","useDateInput","init","editing","setEditing","applied","setApplied","apply","onChange","event","target","value","dirty","initCounter","useFilterPane","pageFilters","visible","setVisible","from","to","dates","toggle","forEach","setGlobal","Id","greaterThanOrEqualTo","lessThanOrEqualTo","title","some","FilterPane","filterPane"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DateReported } from \"./demoSchema\";\nimport { PageFilters } from \"flowerbi-react\";\n\nfunction lastYear() {\n    const d = new Date();\n    d.setFullYear(d.getFullYear() - 5);\n    return d;\n}\n\nfunction toDateString(d: Date) {\n    return d.toISOString().substr(0, 10);\n}\n\nfunction useDateInput(init: Date) {\n    const [editing, setEditing] = useState(toDateString(init));\n    const [applied, setApplied] = useState(toDateString(init));\n\n    function apply() {\n        setApplied(editing);\n    }\n\n    function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setEditing(event.target.value);\n    }\n\n    return {\n        editing,\n        applied,\n        dirty: editing !== applied,\n        onChange,\n        apply        \n    };\n}\n\nlet initCounter = 0;\n\nexport function useFilterPane(pageFilters: PageFilters) {\n    const [visible, setVisible] = useState(false);\n    const from = useDateInput(lastYear());\n    const to = useDateInput(new Date());    \n    const dates = [from, to];\n\n    function toggle() {\n        setVisible(!visible);\n    }\n\n    function apply() {\n        dates.forEach(d => d.apply());\n        pageFilters.setGlobal([\n            DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)),\n            DateReported.Id.lessThanOrEqualTo(new Date(to.editing))\n        ]);\n    }\n\n    const [init] = useState(++initCounter);\n    if (init === initCounter) {\n        apply();\n    }\n\n    const title = `Entered date from ${from.applied} to ${to.applied}`;\n\n    const dirty = dates.some(d => d.dirty);\n\n    return { visible, toggle, from, to, dirty, title, apply };\n}\n\nexport interface FilterPaneProps {\n    filterPane: ReturnType<typeof useFilterPane>; \n}\n\nexport function FilterPane({ filterPane: { visible, from, to, apply, dirty } }: FilterPaneProps) {\n    return (\n        <div className={`filter-pane ${visible && \"visible\"}`}>\n            <div>From</div>\n            <input type=\"date\" value={from.editing} onChange={from.onChange}/>\n            <div>To</div>\n            <input type=\"date\" value={to.editing} onChange={to.onChange}/>\n            <div className={`button ${dirty && \"enabled\"}`} onClick={apply}>Update</div>                 \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}