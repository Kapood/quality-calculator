{"ast":null,"code":"import _slicedToArray from\"/Users/alex/Documents/Build/test/flowerbi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{DateReported}from\"./demoSchema\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function lastYear(){var d=new Date();d.setFullYear(d.getFullYear()-5);return d;}function toDateString(d){return d.toISOString().substr(0,10);}function useDateInput(init){var _useState=useState(toDateString(init)),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(toDateString(init)),_useState4=_slicedToArray(_useState3,2),applied=_useState4[0],setApplied=_useState4[1];function apply(){setApplied(editing);}function onChange(event){setEditing(event.target.value);}return{editing:editing,applied:applied,dirty:editing!==applied,onChange:onChange,apply:apply};}var initCounter=0;export function useFilterPane(pageFilters){var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),visible=_useState6[0],setVisible=_useState6[1];var from=useDateInput(lastYear());var to=useDateInput(new Date());var dates=[from,to];function toggle(){setVisible(!visible);}function apply(){dates.forEach(function(d){return d.apply();});pageFilters.setGlobal([DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)),DateReported.Id.lessThanOrEqualTo(new Date(to.editing))]);}var _useState7=useState(++initCounter),_useState8=_slicedToArray(_useState7,1),init=_useState8[0];if(init===initCounter){apply();}var title=\"Entered date from \".concat(from.applied,\" to \").concat(to.applied);var dirty=dates.some(function(d){return d.dirty;});return{visible:visible,toggle:toggle,from:from,to:to,dirty:dirty,title:title,apply:apply};}export function FilterPane(_ref){var _ref$filterPane=_ref.filterPane,visible=_ref$filterPane.visible,from=_ref$filterPane.from,to=_ref$filterPane.to,apply=_ref$filterPane.apply,dirty=_ref$filterPane.dirty;return/*#__PURE__*/_jsxs(\"div\",{className:\"filter-pane \".concat(visible&&\"visible\"),children:[/*#__PURE__*/_jsx(\"div\",{children:\"From\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from.editing,onChange:from.onChange}),/*#__PURE__*/_jsx(\"div\",{children:\"To\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to.editing,onChange:to.onChange}),/*#__PURE__*/_jsx(\"div\",{className:\"button \".concat(dirty&&\"enabled\"),onClick:apply,children:\"Update\"})]});}","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/FilterPane.tsx"],"names":["React","useState","DateReported","lastYear","d","Date","setFullYear","getFullYear","toDateString","toISOString","substr","useDateInput","init","editing","setEditing","applied","setApplied","apply","onChange","event","target","value","dirty","initCounter","useFilterPane","pageFilters","visible","setVisible","from","to","dates","toggle","forEach","setGlobal","Id","greaterThanOrEqualTo","lessThanOrEqualTo","title","some","FilterPane","filterPane"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DateReported } from \"./demoSchema\";\nimport { PageFilters } from \"flowerbi-react\";\n\nfunction lastYear() {\n    const d = new Date();\n    d.setFullYear(d.getFullYear() - 5);\n    return d;\n}\n\nfunction toDateString(d: Date) {\n    return d.toISOString().substr(0, 10);\n}\n\nfunction useDateInput(init: Date) {\n    const [editing, setEditing] = useState(toDateString(init));\n    const [applied, setApplied] = useState(toDateString(init));\n\n    function apply() {\n        setApplied(editing);\n    }\n\n    function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setEditing(event.target.value);\n    }\n\n    return {\n        editing,\n        applied,\n        dirty: editing !== applied,\n        onChange,\n        apply        \n    };\n}\n\nlet initCounter = 0;\n\nexport function useFilterPane(pageFilters: PageFilters) {\n    const [visible, setVisible] = useState(false);\n    const from = useDateInput(lastYear());\n    const to = useDateInput(new Date());    \n    const dates = [from, to];\n\n    function toggle() {\n        setVisible(!visible);\n    }\n\n    function apply() {\n        dates.forEach(d => d.apply());\n        pageFilters.setGlobal([\n            DateReported.Id.greaterThanOrEqualTo(new Date(from.editing)),\n            DateReported.Id.lessThanOrEqualTo(new Date(to.editing))\n        ]);\n    }\n\n    const [init] = useState(++initCounter);\n    if (init === initCounter) {\n        apply();\n    }\n\n    const title = `Entered date from ${from.applied} to ${to.applied}`;\n\n    const dirty = dates.some(d => d.dirty);\n\n    return { visible, toggle, from, to, dirty, title, apply };\n}\n\nexport interface FilterPaneProps {\n    filterPane: ReturnType<typeof useFilterPane>; \n}\n\nexport function FilterPane({ filterPane: { visible, from, to, apply, dirty } }: FilterPaneProps) {\n    return (\n        <div className={`filter-pane ${visible && \"visible\"}`}>\n            <div>From</div>\n            <input type=\"date\" value={from.editing} onChange={from.onChange}/>\n            <div>To</div>\n            <input type=\"date\" value={to.editing} onChange={to.onChange}/>\n            <div className={`button ${dirty && \"enabled\"}`} onClick={apply}>Update</div>                 \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}