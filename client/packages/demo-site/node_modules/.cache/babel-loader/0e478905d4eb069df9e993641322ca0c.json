{"ast":null,"code":"import _objectSpread from\"/Users/alex/Documents/Build/test/flowerbi/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/alex/Documents/Build/test/flowerbi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useRef}from\"react\";import{useQuery}from\"flowerbi-react\";import{fillDates}from\"flowerbi-dates\";import{useDropDown,DropDown,FlowerBIChartBox}from\"flowerbi-react-utils\";import{Bug,Workflow,DateReported}from\"../demoSchema\";import{dataColours}from\"./dataColours\";import{Chart}from\"react-chartjs-2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var dateGroupings=[{label:\"Month\",value:DateReported.FirstDayOfMonth},{label:\"Quarter\",value:DateReported.FirstDayOfQuarter},{label:\"Year\",value:DateReported.CalendarYearNumber}];export function BugsOverTime(_ref){var pageFilters=_ref.pageFilters,fetch=_ref.fetch;var id=\"BugsOverTime\";var dateGrouping=useDropDown(dateGroupings);var query={select:{period:dateGrouping.selected,countAllCauses:Bug.Id.count(),countHackers:Bug.Id.count([Workflow.SourceOfError.equalTo(\"Hackers\")])},filters:[Workflow.Resolved.equalTo(true)].concat(_toConsumableArray(pageFilters.getFilters(id))),orderBy:[dateGrouping.selected.ascending()]};var result=useQuery(fetch,query);var datedRecords=fillDates({records:result.records,min:2017,max:\"2021-12-31\",getDate:function getDate(r){return r.period;},fill:function fill(dateLabel,record){return _objectSpread({dateLabel:dateLabel,countAllCauses:0,countHackers:0},record);}});var ref=useRef(null);var hackers={type:\"line\",data:datedRecords.map(function(r){var _r$countHackers;return(_r$countHackers=r.countHackers)!==null&&_r$countHackers!==void 0?_r$countHackers:0;}),label:\"Hackers\",backgroundColor:\"transparent\",// lineTension: 0,\nborderColor:dataColours[1]};var allCauses={data:datedRecords.map(function(r){return r.countAllCauses;}),label:\"All Causes\",backgroundColor:dataColours[0]};var data={labels:datedRecords.map(function(x){return x.dateLabel;}),datasets:[hackers,allCauses]};var options={onClick:function onClick(evt,elements,chart){console.log(\"clicked\",{evt:evt,elements:elements,chart:chart});if(elements[0]){var clicked=result.records[elements[0].index].period;pageFilters.setInteraction(id,[dateGrouping.selected.equalTo(clicked)]);}},scales:{y:{beginAtZero:true}}};return/*#__PURE__*/_jsx(FlowerBIChartBox,{id:id,title:\"Bugs Over Time\",state:result.state,children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-with-dropdown\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsx(Chart,{type:\"bar\",ref:ref,options:options,data:data})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"By \"}),/*#__PURE__*/_jsx(DropDown,_objectSpread({},dateGrouping))]})]})});}","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/Reports/BugsOverTime.tsx"],"names":["React","useRef","useQuery","fillDates","useDropDown","DropDown","FlowerBIChartBox","Bug","Workflow","DateReported","dataColours","Chart","dateGroupings","label","value","FirstDayOfMonth","FirstDayOfQuarter","CalendarYearNumber","BugsOverTime","pageFilters","fetch","id","dateGrouping","query","select","period","selected","countAllCauses","Id","count","countHackers","SourceOfError","equalTo","filters","Resolved","getFilters","orderBy","ascending","result","datedRecords","records","min","max","getDate","r","fill","dateLabel","record","ref","hackers","type","data","map","backgroundColor","borderColor","allCauses","labels","x","datasets","options","onClick","evt","elements","chart","console","log","clicked","index","setInteraction","scales","y","beginAtZero","state"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { QueryColumn } from \"flowerbi\";\nimport { useQuery } from \"flowerbi-react\";\nimport { fillDates } from \"flowerbi-dates\";\nimport { useDropDown, DropDown, FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow, DateReported } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Chart as ChartJS, ChartDataset, ChartOptions, ChartData } from \"chart.js\";\nimport { VisualProps } from \"./VisualProps\";\nimport { Chart } from \"react-chartjs-2\";\n\nconst dateGroupings = [\n    { label: \"Month\", value: DateReported.FirstDayOfMonth },\n    { label: \"Quarter\", value: DateReported.FirstDayOfQuarter },\n    { label: \"Year\", value: DateReported.CalendarYearNumber }\n]\n\nexport function BugsOverTime({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"BugsOverTime\";\n\n    const dateGrouping = useDropDown<QueryColumn<Date|number>>(dateGroupings);\n\n    const query = {\n        select: {\n            period: dateGrouping.selected,\n            countAllCauses: Bug.Id.count(),\n            countHackers: Bug.Id.count([\n                Workflow.SourceOfError.equalTo(\"Hackers\")\n            ]),\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n        orderBy: [dateGrouping.selected.ascending()],        \n    };\n\n    const result = useQuery(fetch, query);\n\n    const datedRecords = fillDates({ \n        records: result.records, \n        min: 2017, \n        max: \"2021-12-31\", \n        getDate: r => r.period, \n        fill: (dateLabel, record) => ({\n            dateLabel,\n            countAllCauses: 0,\n            countHackers: 0,\n            ...record \n        })\n    });\n\n    const ref = useRef<ChartJS<\"bar\">>(null);\n\n    const hackers: ChartDataset = {\n        type: \"line\",\n        data: datedRecords.map(r => r.countHackers ?? 0),\n        label: \"Hackers\",\n        backgroundColor: \"transparent\",\n        // lineTension: 0,\n        borderColor: dataColours[1],\n    };\n    \n    const allCauses: ChartDataset = {\n        data: datedRecords.map(r => r.countAllCauses),\n        label: \"All Causes\",\n        backgroundColor: dataColours[0]\n    };\n    \n    const data: ChartData = {\n        labels: datedRecords.map(x => x.dateLabel),\n        datasets: [hackers, allCauses],\n    };\n\n    const options: ChartOptions = {\n        onClick(evt, elements, chart) {\n            console.log(\"clicked\", { evt, elements, chart });\n            if (elements[0]) {\n                const clicked = result.records[elements[0].index].period;\n                pageFilters.setInteraction(id, [\n                    dateGrouping.selected.equalTo(clicked)\n                ]);\n            }\n        },\n        scales: {\n            y: { beginAtZero: true }\n        }\n    };\n\n    return (\n        <FlowerBIChartBox id={id} title=\"Bugs Over Time\" state={result.state}>\n            <div className=\"chart-with-dropdown\">\n                <div className=\"content\">\n                    <Chart type=\"bar\" ref={ref} options={options} data={data} />\n                </div>            \n                <div className=\"dropdown\">\n                    <span>By </span><DropDown {...dateGrouping} />\n                </div>\n            </div>            \n        </FlowerBIChartBox>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}