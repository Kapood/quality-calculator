{"ast":null,"code":"import{IntegerQueryColumn,QueryColumn,StringQueryColumn}from\"flowerbi\";// Important: this file is auto-generated by flowerbi.\nexport var Date={Id:new QueryColumn(\"Date.Id\"),CalendarYearNumber:new IntegerQueryColumn(\"Date.CalendarYearNumber\"),FirstDayOfQuarter:new QueryColumn(\"Date.FirstDayOfQuarter\"),FirstDayOfMonth:new QueryColumn(\"Date.FirstDayOfMonth\")};export var DateReported={Id:new QueryColumn(\"DateReported.Id\"),CalendarYearNumber:new IntegerQueryColumn(\"DateReported.CalendarYearNumber\"),FirstDayOfQuarter:new QueryColumn(\"DateReported.FirstDayOfQuarter\"),FirstDayOfMonth:new QueryColumn(\"DateReported.FirstDayOfMonth\")};export var DateResolved={Id:new QueryColumn(\"DateResolved.Id\"),CalendarYearNumber:new IntegerQueryColumn(\"DateResolved.CalendarYearNumber\"),FirstDayOfQuarter:new QueryColumn(\"DateResolved.FirstDayOfQuarter\"),FirstDayOfMonth:new QueryColumn(\"DateResolved.FirstDayOfMonth\")};export var DateAssigned={Id:new QueryColumn(\"DateAssigned.Id\"),CalendarYearNumber:new IntegerQueryColumn(\"DateAssigned.CalendarYearNumber\"),FirstDayOfQuarter:new QueryColumn(\"DateAssigned.FirstDayOfQuarter\"),FirstDayOfMonth:new QueryColumn(\"DateAssigned.FirstDayOfMonth\")};export var Workflow={Id:new IntegerQueryColumn(\"Workflow.Id\"),Resolved:new QueryColumn(\"Workflow.Resolved\"),WorkflowState:new StringQueryColumn(\"Workflow.WorkflowState\"),SourceOfError:new StringQueryColumn(\"Workflow.SourceOfError\"),FixedByCustomer:new QueryColumn(\"Workflow.FixedByCustomer\")};export var Category={Id:new IntegerQueryColumn(\"Category.Id\"),Label:new StringQueryColumn(\"Category.Label\")};export var Customer={Id:new IntegerQueryColumn(\"Customer.Id\"),CustomerName:new StringQueryColumn(\"Customer.CustomerName\")};export var Coder={Id:new IntegerQueryColumn(\"Coder.Id\"),FullName:new StringQueryColumn(\"Coder.FullName\")};export var CoderAssigned={Id:new IntegerQueryColumn(\"CoderAssigned.Id\"),FullName:new StringQueryColumn(\"CoderAssigned.FullName\")};export var CoderResolved={Id:new IntegerQueryColumn(\"CoderResolved.Id\"),FullName:new StringQueryColumn(\"CoderResolved.FullName\")};export var CategoryCombination={Id:new IntegerQueryColumn(\"CategoryCombination.Id\"),Crashed:new QueryColumn(\"CategoryCombination.Crashed\"),DataLoss:new QueryColumn(\"CategoryCombination.DataLoss\"),SecurityBreach:new QueryColumn(\"CategoryCombination.SecurityBreach\"),OffByOne:new QueryColumn(\"CategoryCombination.OffByOne\"),Slow:new QueryColumn(\"CategoryCombination.Slow\"),StackOverflow:new QueryColumn(\"CategoryCombination.StackOverflow\")};export var Bug={Id:new IntegerQueryColumn(\"Bug.Id\"),WorkflowId:new IntegerQueryColumn(\"Bug.WorkflowId\"),CustomerId:new IntegerQueryColumn(\"Bug.CustomerId\"),ReportedDate:new QueryColumn(\"Bug.ReportedDate\"),ResolvedDate:new QueryColumn(\"Bug.ResolvedDate\"),AssignedDate:new QueryColumn(\"Bug.AssignedDate\"),CategoryCombinationId:new IntegerQueryColumn(\"Bug.CategoryCombinationId\"),AssignedCoderId:new IntegerQueryColumn(\"Bug.AssignedCoderId\"),ResolvedCoderId:new IntegerQueryColumn(\"Bug.ResolvedCoderId\")};export var BugSchema={Date:Date,DateReported:DateReported,DateResolved:DateResolved,DateAssigned:DateAssigned,Workflow:Workflow,Category:Category,Customer:Customer,Coder:Coder,CoderAssigned:CoderAssigned,CoderResolved:CoderResolved,CategoryCombination:CategoryCombination,Bug:Bug};","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/demoSchema.ts"],"names":["IntegerQueryColumn","QueryColumn","StringQueryColumn","Date","Id","CalendarYearNumber","FirstDayOfQuarter","FirstDayOfMonth","DateReported","DateResolved","DateAssigned","Workflow","Resolved","WorkflowState","SourceOfError","FixedByCustomer","Category","Label","Customer","CustomerName","Coder","FullName","CoderAssigned","CoderResolved","CategoryCombination","Crashed","DataLoss","SecurityBreach","OffByOne","Slow","StackOverflow","Bug","WorkflowId","CustomerId","ReportedDate","ResolvedDate","AssignedDate","CategoryCombinationId","AssignedCoderId","ResolvedCoderId","BugSchema"],"mappings":"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","sourcesContent":["import { IntegerQueryColumn, QueryColumn, StringQueryColumn } from \"flowerbi\";\n\n// Important: this file is auto-generated by flowerbi.\n\nexport const Date = {\n    Id: new QueryColumn<Date>(\"Date.Id\"),\n    CalendarYearNumber: new IntegerQueryColumn<number>(\"Date.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"Date.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"Date.FirstDayOfMonth\"),\n};\n\nexport const DateReported = {\n    Id: new QueryColumn<Date>(\"DateReported.Id\"),\n    CalendarYearNumber: new IntegerQueryColumn<number>(\"DateReported.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateReported.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateReported.FirstDayOfMonth\"),\n};\n\nexport const DateResolved = {\n    Id: new QueryColumn<Date>(\"DateResolved.Id\"),\n    CalendarYearNumber: new IntegerQueryColumn<number>(\"DateResolved.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateResolved.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateResolved.FirstDayOfMonth\"),\n};\n\nexport const DateAssigned = {\n    Id: new QueryColumn<Date>(\"DateAssigned.Id\"),\n    CalendarYearNumber: new IntegerQueryColumn<number>(\"DateAssigned.CalendarYearNumber\"),\n    FirstDayOfQuarter: new QueryColumn<Date>(\"DateAssigned.FirstDayOfQuarter\"),\n    FirstDayOfMonth: new QueryColumn<Date>(\"DateAssigned.FirstDayOfMonth\"),\n};\n\nexport const Workflow = {\n    Id: new IntegerQueryColumn<number>(\"Workflow.Id\"),\n    Resolved: new QueryColumn<boolean>(\"Workflow.Resolved\"),\n    WorkflowState: new StringQueryColumn<string>(\"Workflow.WorkflowState\"),\n    SourceOfError: new StringQueryColumn<string>(\"Workflow.SourceOfError\"),\n    FixedByCustomer: new QueryColumn<boolean>(\"Workflow.FixedByCustomer\"),\n};\n\nexport const Category = {\n    Id: new IntegerQueryColumn<number>(\"Category.Id\"),\n    Label: new StringQueryColumn<string>(\"Category.Label\"),\n};\n\nexport const Customer = {\n    Id: new IntegerQueryColumn<number>(\"Customer.Id\"),\n    CustomerName: new StringQueryColumn<string>(\"Customer.CustomerName\"),\n};\n\nexport const Coder = {\n    Id: new IntegerQueryColumn<number>(\"Coder.Id\"),\n    FullName: new StringQueryColumn<string>(\"Coder.FullName\"),\n};\n\nexport const CoderAssigned = {\n    Id: new IntegerQueryColumn<number>(\"CoderAssigned.Id\"),\n    FullName: new StringQueryColumn<string>(\"CoderAssigned.FullName\"),\n};\n\nexport const CoderResolved = {\n    Id: new IntegerQueryColumn<number>(\"CoderResolved.Id\"),\n    FullName: new StringQueryColumn<string>(\"CoderResolved.FullName\"),\n};\n\nexport const CategoryCombination = {\n    Id: new IntegerQueryColumn<number>(\"CategoryCombination.Id\"),\n    Crashed: new QueryColumn<boolean>(\"CategoryCombination.Crashed\"),\n    DataLoss: new QueryColumn<boolean>(\"CategoryCombination.DataLoss\"),\n    SecurityBreach: new QueryColumn<boolean>(\"CategoryCombination.SecurityBreach\"),\n    OffByOne: new QueryColumn<boolean>(\"CategoryCombination.OffByOne\"),\n    Slow: new QueryColumn<boolean>(\"CategoryCombination.Slow\"),\n    StackOverflow: new QueryColumn<boolean>(\"CategoryCombination.StackOverflow\"),\n};\n\nexport const Bug = {\n    Id: new IntegerQueryColumn<number>(\"Bug.Id\"),\n    WorkflowId: new IntegerQueryColumn<number>(\"Bug.WorkflowId\"),\n    CustomerId: new IntegerQueryColumn<number>(\"Bug.CustomerId\"),\n    ReportedDate: new QueryColumn<Date>(\"Bug.ReportedDate\"),\n    ResolvedDate: new QueryColumn<Date>(\"Bug.ResolvedDate\"),\n    AssignedDate: new QueryColumn<Date>(\"Bug.AssignedDate\"),\n    CategoryCombinationId: new IntegerQueryColumn<number>(\"Bug.CategoryCombinationId\"),\n    AssignedCoderId: new IntegerQueryColumn<number>(\"Bug.AssignedCoderId\"),\n    ResolvedCoderId: new IntegerQueryColumn<number>(\"Bug.ResolvedCoderId\"),\n};\n\nexport const BugSchema = {\n    Date,\n    DateReported,\n    DateResolved,\n    DateAssigned,\n    Workflow,\n    Category,\n    Customer,\n    Coder,\n    CoderAssigned,\n    CoderResolved,\n    CategoryCombination,\n    Bug,\n};\n"]},"metadata":{},"sourceType":"module"}