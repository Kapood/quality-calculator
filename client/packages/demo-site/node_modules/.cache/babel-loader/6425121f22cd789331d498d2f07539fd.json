{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DropDown = exports.useDropDown = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_2 = __importDefault(require(\"react\"));\n\nfunction useDropDown(options) {\n  var _a = (0, react_1.useState)(options[0].label),\n      selectedLabel = _a[0],\n      setSelectedLabel = _a[1];\n\n  return {\n    options: options.map(function (x) {\n      return x.label;\n    }),\n    value: selectedLabel,\n    onChange: function onChange(e) {\n      setSelectedLabel(e.target.value);\n    },\n\n    get selected() {\n      var _a, _b;\n\n      return (_b = (_a = options.find(function (x) {\n        return x.label === selectedLabel;\n      })) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : options[0].value;\n    }\n\n  };\n}\n\nexports.useDropDown = useDropDown;\n\nfunction DropDown(_a) {\n  var options = _a.options,\n      value = _a.value,\n      onChange = _a.onChange;\n  return react_2.default.createElement(\"select\", {\n    value: value,\n    onChange: onChange\n  }, options.map(function (x) {\n    return react_2.default.createElement(\"option\", {\n      key: x\n    }, x);\n  }));\n}\n\nexports.DropDown = DropDown;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAOA,SAAgBA,WAAhB,CAA+BC,OAA/B,EAA2D;AACjD,WAAoC,sBAASA,OAAO,CAAC,CAAD,CAAP,CAAWC,KAApB,CAApC;AAAA,MAACC,aAAa,QAAd;AAAA,MAAgBC,gBAAgB,QAAhC;;AACN,SAAO;AACHH,WAAO,EAAEA,OAAO,CAACI,GAAR,CAAY,aAAC;AAAI,cAAC,CAACH,KAAF;AAAO,KAAxB,CADN;AAEHI,SAAK,EAAEH,aAFJ;AAGHI,YAAQ,EAAR,kBAASC,CAAT,EAAgD;AAC5CJ,sBAAgB,CAACI,CAAC,CAACC,MAAF,CAASH,KAAV,CAAhB;AACH,KALE;;AAMH,QAAII,QAAJ,GAAY;;;AACR,aAAO,mBAAO,CAACC,IAAR,CAAa,aAAC;AAAI,gBAAC,CAACT,KAAF,KAAYC,aAAZ;AAAyB,OAA3C,OAA4C,IAA5C,IAA4CS,aAA5C,GAA4C,MAA5C,GAA4CA,GAAEN,KAA9C,MAAmD,IAAnD,IAAmDO,aAAnD,GAAmDA,EAAnD,GACCZ,OAAO,CAAC,CAAD,CAAP,CAAWK,KADnB;AAEH;;AATE,GAAP;AAWH;;AAbDQ;;AAqBA,SAAgBC,QAAhB,CAAyBH,EAAzB,EAAkE;MAAxCX,OAAO;MAAEK,KAAK;MAAEC,QAAQ;AAC9C,SACIS;AAAQV,SAAK,EAAEA,KAAf;AAAsBC,YAAQ,EAAEA;AAAhC,KAEIN,OAAO,CAACI,GAAR,CAAY,aAAC;AAAI;AAAQY,SAAG,EAAEC;AAAb,OAAiBA,CAAjB;AAA4B,GAA7C,CAFJ,CADJ;AAOH;;AARDJ","names":["useDropDown","options","label","selectedLabel","setSelectedLabel","map","value","onChange","e","target","selected","find","_a","_b","exports","DropDown","react_2","key","x"],"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/flowerbi-react-utils/src/DropDown.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\n\nexport interface DropDownOption<T> {\n    label: string;\n    value: T;\n}\n\nexport function useDropDown<T>(options: DropDownOption<T>[]) {\n    const [selectedLabel, setSelectedLabel] = useState(options[0].label);\n    return {\n        options: options.map(x => x.label),\n        value: selectedLabel,\n        onChange(e: React.ChangeEvent<HTMLSelectElement>) {\n            setSelectedLabel(e.target.value);\n        },\n        get selected() {\n            return options.find(x => x.label === selectedLabel)?.value ??\n                    options[0].value;\n        }\n    }\n}\n\nexport interface DropDownProps {\n    options: string[],\n    value: string,\n    onChange(e: React.ChangeEvent<HTMLSelectElement>): void;\n}\n\nexport function DropDown({options, value, onChange}: DropDownProps) {\n    return (\n        <select value={value} onChange={onChange}> \n        { \n            options.map(x => <option key={x}>{x}</option>)\n        }\n        </select>\n    );\n}\n"]},"metadata":{},"sourceType":"script"}