{"ast":null,"code":"import _toConsumableArray from\"/Users/alex/Documents/Build/test/flowerbi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from\"react\";import{FlowerBITable,useQuery}from\"flowerbi-react\";import{FlowerBIChartBox}from\"flowerbi-react-utils\";import{Bug,Workflow}from\"../demoSchema\";import{jsx as _jsx}from\"react/jsx-runtime\";export function RecoverySummary(_ref){var pageFilters=_ref.pageFilters,fixedByCustomer=_ref.fixedByCustomer,title=_ref.title,fetch=_ref.fetch;var data=useQuery(fetch,{select:{state:Workflow.WorkflowState,bugCount:Bug.Id.count(),resolvedBugCount:Bug.Id.count([Workflow.Resolved.equalTo(true)])},filters:[Workflow.FixedByCustomer.equalTo(fixedByCustomer)].concat(_toConsumableArray(pageFilters.getFilters(\"\"))),totals:true});return/*#__PURE__*/_jsx(FlowerBIChartBox,{title:title,state:data.state,children:/*#__PURE__*/_jsx(FlowerBITable,{data:data,columns:{State:function State(d){var _d$values$state;return(_d$values$state=d.values.state)!==null&&_d$values$state!==void 0?_d$values$state:\"Total\";},Count:function Count(d){return[\"\".concat(d.values.bugCount),\"right\"];},\"% of Count\":function ofCount(d){return[\"\".concat(d.percentage(\"resolvedBugCount\"),\"%\"),\"right\"];}}})});}","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/Reports/RecoverySummary.tsx"],"names":["React","FlowerBITable","useQuery","FlowerBIChartBox","Bug","Workflow","RecoverySummary","pageFilters","fixedByCustomer","title","fetch","data","select","state","WorkflowState","bugCount","Id","count","resolvedBugCount","Resolved","equalTo","filters","FixedByCustomer","getFilters","totals","State","d","values","Count","percentage"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,QAAxB,KAAwC,gBAAxC,CACA,OAASC,gBAAT,KAAiC,sBAAjC,CACA,OAASC,GAAT,CAAcC,QAAd,KAA8B,eAA9B,C,2CAQA,MAAO,SAASC,CAAAA,eAAT,MAA+F,IAApEC,CAAAA,WAAoE,MAApEA,WAAoE,CAAvDC,eAAuD,MAAvDA,eAAuD,CAAtCC,KAAsC,MAAtCA,KAAsC,CAA/BC,KAA+B,MAA/BA,KAA+B,CAElG,GAAMC,CAAAA,IAAI,CAAGT,QAAQ,CAACQ,KAAD,CAAQ,CACzBE,MAAM,CAAE,CACJC,KAAK,CAAER,QAAQ,CAACS,aADZ,CAEJC,QAAQ,CAAEX,GAAG,CAACY,EAAJ,CAAOC,KAAP,EAFN,CAGJC,gBAAgB,CAAEd,GAAG,CAACY,EAAJ,CAAOC,KAAP,CAAa,CAC3BZ,QAAQ,CAACc,QAAT,CAAkBC,OAAlB,CAA0B,IAA1B,CAD2B,CAAb,CAHd,CADiB,CAQzBC,OAAO,EACHhB,QAAQ,CAACiB,eAAT,CAAyBF,OAAzB,CAAiCZ,eAAjC,CADG,4BAEAD,WAAW,CAACgB,UAAZ,CAAuB,EAAvB,CAFA,EARkB,CAYzBC,MAAM,CAAE,IAZiB,CAAR,CAArB,CAeA,mBACI,KAAC,gBAAD,EAAkB,KAAK,CAAEf,KAAzB,CAAgC,KAAK,CAAEE,IAAI,CAACE,KAA5C,uBACI,KAAC,aAAD,EACI,IAAI,CAAEF,IADV,CAEI,OAAO,CAAE,CACLc,KAAK,CAAE,eAACC,CAAD,6CAAOA,CAAC,CAACC,MAAF,CAASd,KAAhB,mDAAyB,OAAzB,EADF,CAELe,KAAK,CAAE,eAACF,CAAD,QAAO,WAAIA,CAAC,CAACC,MAAF,CAASZ,QAAb,EAAyB,OAAzB,CAAP,EAFF,CAGL,aAAc,iBAACW,CAAD,QAAO,WAAIA,CAAC,CAACG,UAAF,CAAa,kBAAb,CAAJ,MAAyC,OAAzC,CAAP,EAHT,CAFb,EADJ,EADJ,CAYH","sourcesContent":["import React from \"react\";\nimport { FlowerBITable, useQuery } from \"flowerbi-react\";\nimport { FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow } from \"../demoSchema\";\nimport { VisualProps } from \"./VisualProps\";\n\nexport interface RecoverySummaryProps extends VisualProps {\n    fixedByCustomer: boolean;\n    title: string;\n}\n\nexport function RecoverySummary({ pageFilters, fixedByCustomer, title, fetch }: RecoverySummaryProps) {\n\n    const data = useQuery(fetch, {\n        select: {\n            state: Workflow.WorkflowState,\n            bugCount: Bug.Id.count(),\n            resolvedBugCount: Bug.Id.count([\n                Workflow.Resolved.equalTo(true)\n            ])\n        },\n        filters: [\n            Workflow.FixedByCustomer.equalTo(fixedByCustomer),\n            ...pageFilters.getFilters(\"\"),\n        ],\n        totals: true\n    });\n\n    return (\n        <FlowerBIChartBox title={title} state={data.state}>\n            <FlowerBITable\n                data={data}\n                columns={{\n                    State: (d) => d.values.state ?? \"Total\",\n                    Count: (d) => [`${d.values.bugCount}`, \"right\"],\n                    \"% of Count\": (d) => [`${d.percentage(\"resolvedBugCount\")}%`, \"right\"],\n                }} \n            />\n        </FlowerBIChartBox>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}