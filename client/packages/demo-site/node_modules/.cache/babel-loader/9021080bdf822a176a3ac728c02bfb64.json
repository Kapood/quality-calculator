{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/Reports/BugsOverTime.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useQuery } from \"flowerbi-react\";\nimport { fillDates } from \"flowerbi-dates\";\nimport { useDropDown, DropDown, FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow, DateReported } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Chart } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateGroupings = [{\n  label: \"Month\",\n  value: DateReported.FirstDayOfMonth\n}, {\n  label: \"Quarter\",\n  value: DateReported.FirstDayOfQuarter\n}, {\n  label: \"Year\",\n  value: DateReported.CalendarYearNumber\n}];\nexport function BugsOverTime(_ref) {\n  _s();\n\n  let {\n    pageFilters,\n    fetch\n  } = _ref;\n  const id = \"BugsOverTime\";\n  const dateGrouping = useDropDown(dateGroupings);\n  const query = {\n    select: {\n      period: dateGrouping.selected,\n      countAllCauses: Bug.Id.count(),\n      countHackers: Bug.Id.count([Workflow.SourceOfError.equalTo(\"Hackers\")])\n    },\n    filters: [Workflow.Resolved.equalTo(true), ...pageFilters.getFilters(id)],\n    orderBy: [dateGrouping.selected.ascending()]\n  };\n  const result = useQuery(fetch, query);\n  const datedRecords = fillDates({\n    records: result.records,\n    min: 2017,\n    max: \"2021-12-31\",\n    getDate: r => r.period,\n    fill: (dateLabel, record) => ({\n      dateLabel,\n      countAllCauses: 0,\n      countHackers: 0,\n      ...record\n    })\n  });\n  const ref = useRef(null);\n  const hackers = {\n    type: \"line\",\n    data: datedRecords.map(r => {\n      var _r$countHackers;\n\n      return (_r$countHackers = r.countHackers) !== null && _r$countHackers !== void 0 ? _r$countHackers : 0;\n    }),\n    label: \"Hackers\",\n    backgroundColor: \"transparent\",\n    // lineTension: 0,\n    borderColor: dataColours[1]\n  };\n  const allCauses = {\n    data: datedRecords.map(r => r.countAllCauses),\n    label: \"All Causes\",\n    backgroundColor: dataColours[0]\n  };\n  const data = {\n    labels: datedRecords.map(x => x.dateLabel),\n    datasets: [hackers, allCauses]\n  };\n  const options = {\n    onClick(evt, elements, chart) {\n      console.log(\"clicked\", {\n        evt,\n        elements,\n        chart\n      });\n\n      if (elements[0]) {\n        const clicked = result.records[elements[0].index].period;\n        pageFilters.setInteraction(id, [dateGrouping.selected.equalTo(clicked)]);\n      }\n    },\n\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FlowerBIChartBox, {\n    id: id,\n    title: \"Bugs Over Time\",\n    state: result.state,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-with-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"bar\",\n          ref: ref,\n          options: options,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"By \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, { ...dateGrouping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BugsOverTime, \"vTu6eNzeTczNWY13p1JwXgvV8dw=\", false, function () {\n  return [useDropDown, useQuery];\n});\n\n_c = BugsOverTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"BugsOverTime\");","map":{"version":3,"sources":["/Users/alex/Documents/Build/test/flowerbi/client/packages/demo-site/src/Reports/BugsOverTime.tsx"],"names":["React","useRef","useQuery","fillDates","useDropDown","DropDown","FlowerBIChartBox","Bug","Workflow","DateReported","dataColours","Chart","dateGroupings","label","value","FirstDayOfMonth","FirstDayOfQuarter","CalendarYearNumber","BugsOverTime","pageFilters","fetch","id","dateGrouping","query","select","period","selected","countAllCauses","Id","count","countHackers","SourceOfError","equalTo","filters","Resolved","getFilters","orderBy","ascending","result","datedRecords","records","min","max","getDate","r","fill","dateLabel","record","ref","hackers","type","data","map","backgroundColor","borderColor","allCauses","labels","x","datasets","options","onClick","evt","elements","chart","console","log","clicked","index","setInteraction","scales","y","beginAtZero","state"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { QueryColumn } from \"flowerbi\";\nimport { useQuery } from \"flowerbi-react\";\nimport { fillDates } from \"flowerbi-dates\";\nimport { useDropDown, DropDown, FlowerBIChartBox } from \"flowerbi-react-utils\";\nimport { Bug, Workflow, DateReported } from \"../demoSchema\";\nimport { dataColours } from \"./dataColours\";\nimport { Chart as ChartJS, ChartDataset, ChartOptions, ChartData } from \"chart.js\";\nimport { VisualProps } from \"./VisualProps\";\nimport { Chart } from \"react-chartjs-2\";\n\nconst dateGroupings = [\n    { label: \"Month\", value: DateReported.FirstDayOfMonth },\n    { label: \"Quarter\", value: DateReported.FirstDayOfQuarter },\n    { label: \"Year\", value: DateReported.CalendarYearNumber }\n]\n\nexport function BugsOverTime({ pageFilters, fetch }: VisualProps) {\n\n    const id = \"BugsOverTime\";\n\n    const dateGrouping = useDropDown<QueryColumn<Date|number>>(dateGroupings);\n\n    const query = {\n        select: {\n            period: dateGrouping.selected,\n            countAllCauses: Bug.Id.count(),\n            countHackers: Bug.Id.count([\n                Workflow.SourceOfError.equalTo(\"Hackers\")\n            ]),\n        },\n        filters: [\n            Workflow.Resolved.equalTo(true),\n            ...pageFilters.getFilters(id)\n        ],\n        orderBy: [dateGrouping.selected.ascending()],        \n    };\n\n    const result = useQuery(fetch, query);\n\n    const datedRecords = fillDates({ \n        records: result.records, \n        min: 2017, \n        max: \"2021-12-31\", \n        getDate: r => r.period, \n        fill: (dateLabel, record) => ({\n            dateLabel,\n            countAllCauses: 0,\n            countHackers: 0,\n            ...record \n        })\n    });\n\n    const ref = useRef<ChartJS<\"bar\">>(null);\n\n    const hackers: ChartDataset = {\n        type: \"line\",\n        data: datedRecords.map(r => r.countHackers ?? 0),\n        label: \"Hackers\",\n        backgroundColor: \"transparent\",\n        // lineTension: 0,\n        borderColor: dataColours[1],\n    };\n    \n    const allCauses: ChartDataset = {\n        data: datedRecords.map(r => r.countAllCauses),\n        label: \"All Causes\",\n        backgroundColor: dataColours[0]\n    };\n    \n    const data: ChartData = {\n        labels: datedRecords.map(x => x.dateLabel),\n        datasets: [hackers, allCauses],\n    };\n\n    const options: ChartOptions = {\n        onClick(evt, elements, chart) {\n            console.log(\"clicked\", { evt, elements, chart });\n            if (elements[0]) {\n                const clicked = result.records[elements[0].index].period;\n                pageFilters.setInteraction(id, [\n                    dateGrouping.selected.equalTo(clicked)\n                ]);\n            }\n        },\n        scales: {\n            y: { beginAtZero: true }\n        }\n    };\n\n    return (\n        <FlowerBIChartBox id={id} title=\"Bugs Over Time\" state={result.state}>\n            <div className=\"chart-with-dropdown\">\n                <div className=\"content\">\n                    <Chart type=\"bar\" ref={ref} options={options} data={data} />\n                </div>            \n                <div className=\"dropdown\">\n                    <span>By </span><DropDown {...dateGrouping} />\n                </div>\n            </div>            \n        </FlowerBIChartBox>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}