{"ast":null,"code":"\"use strict\";\n\nvar reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.{0,1}\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\nvar reMsAjax = /^\\/Date\\((d|-|.*)\\)[\\/|\\\\]$/;\n\nfunction jsonDateParser(_, value) {\n  var parsedValue = value;\n\n  if (typeof value === 'string') {\n    var a = reISO.exec(value);\n\n    if (a) {\n      parsedValue = new Date(value);\n    } else {\n      a = reMsAjax.exec(value);\n\n      if (a) {\n        var b = a[1].split(/[-+,.]/);\n        parsedValue = new Date(b[0] ? +b[0] : 0 - +b[1]);\n      }\n    }\n  }\n\n  return parsedValue;\n}\n\nexports.jsonDateParser = jsonDateParser;","map":{"version":3,"mappings":";;AACA,IAAIA,KAAK,GAAG,uFAAZ;AACA,IAAIC,QAAQ,GAAG,6BAAf;;AAEA,wBAA+BC,CAA/B,EAA0CC,KAA1C,EAAoD;AAEhD,MAAIC,WAAW,GAAGD,KAAlB;;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,QAAIE,CAAC,GAAGL,KAAK,CAACM,IAAN,CAAWH,KAAX,CAAR;;AACA,QAAIE,CAAJ,EAAO;AACHD,iBAAW,GAAG,IAAIG,IAAJ,CAASJ,KAAT,CAAd;AACH,KAFD,MAEO;AACHE,OAAC,GAAGJ,QAAQ,CAACK,IAAT,CAAcH,KAAd,CAAJ;;AACA,UAAIE,CAAJ,EAAO;AACH,YAAIG,CAAC,GAAGH,CAAC,CAAC,CAAD,CAAD,CAAKI,KAAL,CAAW,QAAX,CAAR;AACAL,mBAAW,GAAG,IAAIG,IAAJ,CAASC,CAAC,CAAC,CAAD,CAAD,GAAO,CAACA,CAAC,CAAC,CAAD,CAAT,GAAe,IAAI,CAACA,CAAC,CAAC,CAAD,CAA9B,CAAd;AACH;AACJ;AACJ;;AAED,SAAOJ,WAAP;AACH;;AAjBDM","names":["reISO","reMsAjax","_","value","parsedValue","a","exec","Date","b","split","exports"],"sources":["/Users/alex/Documents/Build/test/flowerbi/client/node_modules/json-date-parser/index.ts"],"sourcesContent":["\nvar reISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.{0,1}\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\nvar reMsAjax = /^\\/Date\\((d|-|.*)\\)[\\/|\\\\]$/;\n\nexport function jsonDateParser(_: string, value: any) {\n    \n    var parsedValue = value;\n    if (typeof value === 'string') {\n        var a = reISO.exec(value);\n        if (a) {\n            parsedValue = new Date(value);\n        } else {\n            a = reMsAjax.exec(value);\n            if (a) {\n                var b = a[1].split(/[-+,.]/);\n                parsedValue = new Date(b[0] ? +b[0] : 0 - +b[1]);\n            }\n        }\n    }\n    \n    return parsedValue;\n}\n"]},"metadata":{},"sourceType":"script"}